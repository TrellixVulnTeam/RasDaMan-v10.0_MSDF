#!/bin/bash
#
# rasmg        Startup script for the Rasdaman Server
#
# chkconfig: - 64 36
# description: Starts and stops the Rasdaman.
# processname: rasmgr
# config: /etc/rasmgr.conf
# config: /etc/sysconfig/rasmgr
# pidfile: /var/run/rasmgr.pid
#
### BEGIN INIT INFO
# Provides: rasmgr
# Required-Start: $local_fs $remote_fs $network $named $postgresql
# Required-Stop: $local_fs $remote_fs $network
# Should-Start: distcache
# Short-Description: Starts and stops the Rasdaman.
# Description: The Rasdaman Server is a raster data manager.
### END INIT INFO

# Version from spec
RASVERSION=@RASVERSION@
# RASMAJORVERSION is major version, e.g., 8.0 (this should match RAS_VERSION)
RASMAJORVERSION=`echo "$RASVERSION" | sed 's/^\([0-9]*\.[0-9]*\).*$/\1/'`

# Names for messages
prog=rasmgr

# Source function library
. /etc/rc.d/init.d/functions
# Source variables for rasmgr
if [ -f /etc/sysconfig/rasmgr ]; then
        . /etc/sysconfig/rasmgr
fi

# Reset empty to defaults
rasmgr=${RASMGR-/usr/bin/rasmgr}
rasdl=${RASMGR-/usr/bin/rasdl}
rasctrl=${RASCONTROL-/usr/bin/rascontrol}
pidfile=${PIDFILE-/var/run/rasmgr.pid}
lockfile=${LOCKFILE-/var/lock/subsys/rasmgr}
wait_for_children=${WAIT_FOR_CHILDREN-5}
servers=${RASSERVERS-"-all"}
raslogin=${RASADMIN-rasadmin:d293a15562d3e70b6fdc5ee452eaed40}
rasdir=${RASDIR-/var/lib/rasdaman}
rasshell=${RASSHELL-/bin/bash}

# To check if postgres cluster was initialised
# we need this and 
# we fetch it from our sysconfig not postgres one

PGDATA=${PGDATA-/var/lib/pgsql/data}

RETVAL=0

# For SELinux we need to use 'runuser' not 'su'
if [ -x /sbin/runuser ]
then
    SU=runuser
else
    SU=su
fi

raslog=$rasdir/startup.log
rascontrol="RASLOGIN=$raslogin $rasctrl"
deffile=$rasdir/basictypes.dl

# The semantics of these two functions differ from the way apachectl does
# things -- attempting to start while running is a failure, and shutdown
# when not running is also a failure.  So we just do it the way init scripts
# are expected to behave here.
start() {

	# Make sure startup-time log file is valid
	if [ ! -e "$raslog" -a ! -h "$raslog" ]
	then
		touch "$raslog" || exit 1
		chown rasdaman:rasdaman "$raslog"
		chmod go-rwx "$raslog"
		[ -x /usr/bin/chcon ] && /usr/bin/chcon -u system_u -r object_r -t postgresql_log_t "$raslog" 2>/dev/null
	fi

	# Check for the PGDATA structure
	if [ -f "$PGDATA/PG_VERSION" ] && [ -d "$PGDATA/base" ]
	then
		echo
		echo $"PostgreSQL database was found."
		echo $"Version is not checked here."
		echo $"Location $PGDATA."
	else
		# No existing PGDATA! Warn the user to initdb it.
		echo
                echo "$PGDATA is missing. Use \"service rasmgr initdb\" to initialize the cluster first."
                echo "PostgreSQL database will be initialized automatically."
		echo_failure
		echo
		exit 1
 	fi

        echo -n $"Starting $prog: "
	$SU -l rasdaman -s "$rasshell" -c "$rasmgr &" >> "$raslog" 2>&1 < /dev/null
	if [[ $? != 0 ]]
	then
	        echo
        	touch ${lockfile}
		pidof -s "$rasmgr" > ${pidfile}
	fi

	sleep $wait_for_children

	for SRV in $servers
	do
		echo -n $"$rascontrol: starting server $SRV..."
		$SU -l rasdaman -s "$rasshell" -c "$rascontrol -e -q -x up srv $SRV" >> "$raslog" 2>&1 < /dev/null
		RETVAL=$?
		if [[ $RETVAL != 0 ]]
		then
			exit $!
		fi
	done

        return $RETVAL
}

# When stopping httpd a delay of >10 second is required before SIGKILLing the
# httpd parent; this gives enough time for the httpd parent to SIGKILL any
# errant children.
stop() {
	running=`$SU -l rasdaman -s "$rasshell" -c "$rascontrol -e -q -x list srv | awk '{ print $2;}'"`
	for SRV in $running
	do
		echo -n $"$rascontrol: stoping server $SRV..."
		$SU -l rasdaman -s "$rasshell" -c "$rascontrol -e -q -x down srv $SRV -kill" >> "$raslog" 2>&1 < /dev/null
	done

	sleep $wait_for_children

	$SU -l rasdaman -s "$rasshell" -c "$rascontrol -e -q -x down host -all" >> "$raslog" 2>&1 < /dev/null

	RETVAL=$?

	[ $RETVAL = 0 ] && rm -f ${lockfile} ${pidfile}
}

initdb(){
	bhostname=`hostname`
	mv /etc/rasmgr.conf /etc/rasmgr.conf.init
	cat /etc/rasmgr.conf.init | sed -e "s/localhost/$bhostname/g" > /etc/rasmgr.conf
	service postgresql initdb
	service postgresql start
	$SU -l postgres -c "createuser -d -r -S rasdaman"
	RETVAL=$?
	if [[ $RETVAL != 0 ]]
	then
		echo $"createuser failed"
		exit $!
	fi
	$SU -l rasdaman -s "$rasshell" -c "createdb RASBASE"
	RETVAL=$?
	if [[ $RETVAL != 0 ]]
	then
		echo $"createdb failed"
		exit $!
	fi
	$SU -l rasdaman -s "$rasshell" -c "$rasdl -c --connect RASBASE && $rasdl -r $deffile -i --connect RASBASE"
	RETVAL=$?
	if [[ $RETVAL != 0 ]]
	then
		echo $"rasdl failed"
		exit $!
	fi
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
        status -p ${pidfile} $rasmgr
	$SU -l rasdaman -s "$rasshell" -c "$rascontrol -e -q -x list srv"
	RETVAL=$?
	;;
  restart)
	stop
	start
	;;
  condrestart)
	if status -p ${pidfile} $rasmgr >&/dev/null; then
		stop
		start
	fi
	;;
  initdb)
	initdb
	;;
  *)
	echo $"Usage: $prog {start|stop|restart|condrestart|status|initdb}"
	RETVAL=3
esac

exit $RETVAL

