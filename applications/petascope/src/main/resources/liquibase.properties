/*
 * This file is part of rasdaman community.
 *
 * Rasdaman community is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Rasdaman community is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU  General Public License for more details.
 *
 * You should have received a copy of the GNU  General Public License
 * along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2003 - 2017 Peter Baumann / rasdaman GmbH.
 *
 * For more information please see <http://www.rasdaman.org>
 * or contact Peter Baumann via <baumann@rasdaman.com>.
 */

# **** Current database version ****

# This is the stable database version of Petascope, only used by Maven plugin
# when creating new diff file or the first time to generate the first version (v1.0).
# NOTE: always create a new temp database before generating the XML file by Liquibase
# (i.e: let Hibernate create database schema by setting in petascope.properties with spring.jpa.hibernate.ddl-auto=create).
url=jdbc:postgresql://localhost:5432/cisdb
username=petauser
password=petapasswd
changeLogFile=src/main/resources/database_versions/db.changelog-master.xml

# Only need to create this file one time of new Petascope, then in Petascope source folder, run Maven plugin:
# mvn liquibase:generateChangeLog
# The output is the Liquibase XML file for the current schema.
#outputChangeLogFile=src/main/resources/database_versions/db.changelog-v1.0.xml


# **** Developement database version ****

# When Petascope changes something in database schema (insert/update/delete tables, columns) then it will need to
# update the current database version (e.g: v1.0) to the development database version (e.g: v1.1).
# In Petascope source folder, run Maven plugin:
# mvn liquibase:diff
# It will create the new diff file from current schema and development schema.
# NOTE: don't rely completely in the changes of this file, check it manually and make sure the changes are valid.
# For example: it will not drop another table, column or add some keys in table unexpectedly.
# If the change does not make sense, make the changes manually by Liquibase (e.g: rename a column to different name as Liquibase can only add a new column and will not move data from old column to new column and delete old column).

# (!) Always test the changes carefully (!) before including the new diff file to db.changelog-master.xml file.

referenceUrl=jdbc:postgresql://localhost:5432/cisdb_update1
referenceUsername=petauser
referencePassword=petapasswd
diffChangeLogFile=src/main/resources/database_versions/db.changelog-v1.update1.xml

