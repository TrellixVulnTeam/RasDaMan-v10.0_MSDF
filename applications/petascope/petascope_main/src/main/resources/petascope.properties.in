# This file is part of rasdaman community.
#
# Rasdaman community is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Rasdaman community is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2003 - 2020 Peter Baumann / rasdaman GmbH.
#
# For more information please see <http://www.rasdaman.org>
# or contact Peter Baumann via <baumann@rasdaman.com>.
# ------------------------------------------------------------------------------
#
# rasdaman OGC frontend (petascope) configuration file.
#
# Notes:
#  Settings should be specified in key=value pairs.
#  The server needs to be restarted for any changes in this file to take effect.

# --------------------------- Spring configuration -----------------------------

# Files at most as large as specified here can be uploaded to petascope.
spring.http.multipart.max-file-size=128MB
spring.http.multipart.max-request-size=128MB


#--------------------------- Database configuration ----------------------------

# Default configuration for all DBMS.
spring.jpa.database=default
spring.jpa.hibernate.ddl-auto=none

# Config for Spring datasource which is used by petascopedb; It is highly 
# recommended to change the password from the default petapasswd. More details: 
# https://doc.rasdaman.org/05_geo-services-guide.html#database-connection
spring.datasource.url=jdbc:postgresql://localhost:5432/petascopedb
spring.datasource.username=petauser
spring.datasource.password=petapasswd

# Path to JDBC jar file for Spring datasource. If left empty, the default 
# PostgreSQL JDBC driver will be used. To use a different DBMS (e.g. H2), please 
# download the corresponding JDBC driver, and set the path to it.
spring.datasource.jdbc_jar_path=

# Config for source datasource when executing migrate_petascopedb.sh.
# This configuration is used to migrate petascopedb from one rasdaman version to
# a newer one (e.g. v9.4 to v9.5), either in same DBMS or to different DBMS
# (e.g. postgres to H2).
metadata_url=jdbc:postgresql://localhost:5432/petascopedb
metadata_user=petauser
metadata_pass=petapasswd
metadata_jdbc_jar_path=


#---------------------- General Petascope configuration ------------------------

# Prefix for controller in web application URL routing, e.g the /rasdaman in
# http://localhost:8080/rasdaman/ows
server.contextPath=/rasdaman

# SECORE endpoints to be used by petascope. Multiple endpoints (for fail safety)
# can be specified as comma-separated list, attempted in order as listed.
# By default, internal indicates that petascope should use its own SECORE.
secore_urls=internal

# Account with read/write access to various service management capabilities;
# Login at http://localhost:8080/rasadaman/admin to access the management
# console. It is highly recommended to change the default password.
petascope_admin_user=petauser
petascope_admin_pass=petapasswd

# If set to true, WCS POST/SOAP XML requests will be validated against 
# OGC WCS 2.0.1 schema definitions; when starting Petascope it will take around 
# 1-2 minutes to load the schemas from the OGC server. Set to false by default;
# passing the OGC CITE tests also requires it to be set to false.
xml_validation=false

# Optimize responses in order to pass a couple of broken OGC CITE test cases.
# Indentation of WCS GetCoverage and DescribeCoverage results will be trimmed.
# Only set to true when executing OGC CITE tests.
ogc_cite_output_optimization=false

# Sets the service endpoint in <ows:HTTP> element of WCS GetCapabilities. Change
# to your public service URL if rasdaman runs behind a proxy; if not set then it
# will be automatically derived, usually to http://localhost:8080/rasdaman/ows
petascope_servlet_url=

# Accept write requests such as WCS-T (Insert, Update and DeleteCoverage) only 
# from the comma-separated list of IP addresses. By default 127.0.0.1 will allow
# locally generated requests, usually needed to import data with wcst_import.sh.
# Setting to empty will block all requests, while * will allow any IP address.
allow_write_requests_from=127.0.0.1

# Server directory where files uploaded by a request will be temporarily stored.
uploaded_files_dir_tmp=/tmp/rasdaman_petascope/upload

# Maximum amount of memory (in bytes) to use for caching WMS GetMap requests. 
# This setting speeds up repeating WMS operaions over similar area/zoom level.
# Consider increasing the parameter if the system has more RAM, but make sure to 
# correspondingly update the -Xmx option for Tomcat as well. The cache evicts 
# last recently inserted data when it reaches the maximum limit specified here.
max_wms_cache_size=100000000

# purpose:       Show only stacktraces generated by rasdaman (false),
#                or full stacktraces including all external libraries (true).
# recommended:   false
# need to adapt: no
full_stacktraces=false


#---------------------- Petascope deployment configuration ---------------------

# Specify how is petascope deployed:
#  1. embedded - start standalone with embedded Tomcat, listening on server.port
#                setting as configured below
#  2. external - rasdaman.war is deployed in webapps dir of external Tomcat
#
# When possible, embedded is recommended, as there is no dependency on
# external Tomcat server, petascope.log can be in the rasdaman log directory,
# and start/stop of petascope is in sync with starting/stopping rasdaman.
java_server=@GENERATED_java_server@

# Port on which embedded petascope (java_server=embedded above) will listen when 
# rasdaman starts. This setting has no effect when java_server=external.
server.port=8080


#------------------- Rasdaman configuration for Petascope ----------------------

# URL of the rasdaman database to which rasdaman connects. Normally rasdaman is
# installed on the same machine, so the bellow needs no changing (unless the
# default rasmgr port 7001 has changed).
rasdaman_url=http://localhost:7001

# Name of the rasdaman database (configured in etc/rasmgr.conf).
rasdaman_database=RASBASE

# Credentials to access rasdaman; it is recommended to specify a user with
# read-only access rights.
rasdaman_user=rasguest
rasdaman_pass=rasguest

# User with read/write access rights to rasdaman; it is recommended to change
# the default admin user in rasdaman and update the values here.
rasdaman_admin_user=rasadmin
rasdaman_admin_pass=rasadmin

# Maximum re-connect attempts to a rasdaman server in case a connection fails.
rasdaman_retry_attempts=5

# Wait time in seconds between re-connect attempts to a rasdaman server.
rasdaman_retry_timeout=10

# Path to rasdaman binaries.
rasdaman_bin_path=@GENERATED_rasdaman_bin_path@


#------------------- Authentication configuration ---------------------------

# Required for forwarding requests between Shibboleth and petascope via AJP13
# if authentication_type=shibboleth and java_server=embedded. Otherwise, if 
# java_server=external then an AJP connector must be added in Tomcat instead;
# more info at https://tomcat.apache.org/tomcat-8.0-doc/config/ajp.html
ajp.port=


#------------------- HTTPS configuration ------------------------------------

# Used only for embedded petascope deployment

# Allow embedded petascope to work with HTTPS from its endpoint.
security.require-ssl=false

# Key-store format for the certificate.
# Default is Java Key Store (JKS) generated by the java keytool.
#server.ssl.key-store-type=JKS

# An absolute path to the key-store. Petascope needs to have read permissions
# for this file path, specified as file://..
#server.ssl.key-store=

# The password to open the certificate from the configured key-store file.
#server.ssl.key-store-password=

#------------------- INSPIRE configuration ------------------------------------

# Link to an external catalog service for the INSPIRE standard, to be provided 
# by the user. If not set then it will be automatically derived from the
# petascope_servlet_url setting.
inspire_common_url=


#---------------------------- logging configuration ----------------------------

# Configuration for petascope logging; by default only level INFO or higher is
# logged, to file.
log4j.rootLogger=INFO, rollingFile

# Reduce the log information from Spring, Hibernate, Liquibase, GRPC, Netty
log4j.logger.org.springframework=WARN
log4j.logger.org.hibernate=WARN
log4j.logger.liquibase=WARN
log4j.logger.io.grpc=WARN
log4j.logger.io.netty=WARN
log4j.logger.org.apache=WARN

# Configure file logging
# The paths for file logging specified below should be write-accessible by the 
# system user running Tomcat. If running embedded Tomcat, then the files should
# be write accessible by the system user running rasdaman.
log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout  
log4j.appender.rollingFile.layout.ConversionPattern=%6p [%d{yyyy-MM-dd HH:mm:ss}] %c{1}@%L: %m%n

# Select one strategy for rolling files and comment out the other

# 1. Rolling files by maximum size and index
#log4j.appender.rollingFile.File=@LOG_DIR@/petascope.log
#log4j.appender.rollingFile.MaxFileSize=10MB
#log4j.appender.rollingFile.MaxBackupIndex=10
#log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender

# 2. Rolling files by time interval (e.g. once a day, or once a month)
log4j.appender.rollingFile.rollingPolicy.ActiveFileName=@LOG_DIR@/petascope.log  
log4j.appender.rollingFile.rollingPolicy.FileNamePattern=@LOG_DIR@/petascope.%d{yyyyMMdd}.log.gz
log4j.appender.rollingFile=org.apache.log4j.rolling.RollingFileAppender  
log4j.appender.rollingFile.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy


#------------------------------ Demo web pages ---------------------------------

# Absolute path to a directory containing demo web pages (html/css/javascript).
# If set, petascope will serve the index.html in this directory at its endpoint,
# e.g. http://localhost:8080/rasdaman/
# Changes of files in this directory do not require a petascope restart.
# The system user running Tomcat (if java_server=external) or rasdaman 
# (if java_server=embedded) must have read permission on this directory.
static_html_dir_path=
