#!/bin/bash
# *
# * This file is part of rasdaman community.
# *
# * Rasdaman community is free software: you can redistribute it and/or modify
# * it under the terms of the GNU General Public License as published by
# * the Free Software Foundation, either version 3 of the License, or
# * (at your option) any later version.
# *
# * Rasdaman community is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# * See the GNU  General Public License for more details.
# *
# * You should have received a copy of the GNU  General Public License
# * along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
# *
# * Copyright 2003 - 2015 Peter Baumann / rasdaman GmbH.
# *
# * For more information please see <http://www.rasdaman.org>
# * or contact Peter Baumann via <baumann@rasdaman.com>.
# *
#
# Call the wcst_import.py from the share directory
export PETASCOPE_PROPERTIES_PATH="@CONF_DIR@/petascope.properties"

RC_OK=0
daemon_flag=false

usage()
{
  local -r usage="
Usage: $PROG [OPTION] <ingredients_file>

wcst_import.sh is a tool for importing data into petascope via WCS-T (example: http://rasdaman.org/wiki/WCSTImportGuide).

Options:
  -q, --quiet
    suppress regular output
  -h, --help
    display this help and exit
  -d, --daemon
    run wcst_import.sh as daemon
    usage: -d|--daemon start|stop|status|restart
"
  echo "$usage"
  exit $RC_OK
}
# ----------------------------------------------------------------------------
# parse command-line options
# ----------------------------------------------------------------------------
quiet=false 
while [ "$1" != "" ]; do
    case $1 in
      -h|--help)     usage;;
      -q|--quiet)   quiet=true;;
      -d|--daemon)
        daemon_flag=true
        shift
        daemon_action="$1";;
      *) ingredients_file="$1";;
    esac
    shift
done

# check if the daemon is active for this ingredients_file
if ps aux | grep -E -v "grep|wcst_import.sh" | grep $ingredients_file > /dev/null
then
  daemon_is_active=true
else
  daemon_is_active=false
fi



script=@WCST_IMPORT_DAEMON_PY_SCRIPT@
if [[ "$daemon_flag" == false ]]; then
  if [[ "$daemon_is_active" == true ]]; then
    echo "A daemon instance for this ingredients file is already running; please stop it first."
    usage
  fi
  script=@WCST_IMPORT_PY_SCRIPT@
fi

if [[ "$quiet" == true ]]; then
    python $script "$ingredients_file" "$daemon_action" 2>&1 > /dev/null
else
    python $script "$ingredients_file" "$daemon_action"
fi
