/*
 * This file is part of rasdaman community.
 *
 * Rasdaman community is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Rasdaman community is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
 *2014 Peter Baumann / rasdaman GmbH.
 *
 * For more information please see <http://www.rasdaman.org>
 * or contact Peter Baumann via <baumann@rasdaman.com>.
 */
package rasnet.internal;
option java_package = "org.rasdaman.rasnet.message.internal";

/**
  * Message sent from the Channel main thread to the worker thread
  * to initiate connection procedure to the server
  */
message InternalConnectRequest {}

/**
  * Message sent from the worker thread to the main thread of
  * the Channel to report the status of the connection procedure
  * to the server
  */
message InternalConnectReply { required bool success = 1; }

/**
  * Message sent from thread A to thread B to tell
  * thread B to terminate. Message passing allows
  * for a clean exit from worker threads.
  */
message InternalDisconnectRequest {}

/**
  * Message sent from thread B to thread A as a response
  * to a InternalDisconnectRequest
  */
message InternalDisconnectReply {}

/**
  * Message used for inter-thread communication
  * to notify the worker thread that a service request is
  * available for processing
  */
message ServiceRequestAvailable {}

/**
  * Message used to notify the caller thread
  * that a service response is available.
  */
message ServiceResponseAvailable {}
